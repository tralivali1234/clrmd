using System;
using System.Diagnostics;
using System.Linq;
using Microsoft.Diagnostics.Runtime;

namespace LinuxTest
{
    class Program
    {
        static byte[] original = { 127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 62, 0, 1, 0, 0, 0, 43, 138, 64, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 16, 150, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 56, 0, 9, 0, 64, 0, 30, 0, 29, 0, 6, 0, 0, 0, 5, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 64, 0, 64, 0, 0, 0, 0, 0, 64, 0, 64, 0, 0, 0, 0, 0, 248, 1, 0, 0, 0, 0, 0, 0, 248, 1, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 56, 2, 0, 0, 0, 0, 0, 0, 56, 2, 64, 0, 0, 0, 0, 0, 56, 2, 64, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 80, 126, 1, 0, 0, 0, 0, 0, 80, 126, 1, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 104, 141, 1, 0, 0, 0, 0, 0, 104, 141, 97, 0, 0, 0, 0, 0, 104, 141, 97, 0, 0, 0, 0, 0, 31, 7, 0, 0, 0, 0, 0, 0, 40, 7, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 168, 141, 1, 0, 0, 0, 0, 0, 168, 141, 97, 0, 0, 0, 0, 0, 168, 141, 97, 0, 0, 0, 0, 0, 32, 2, 0, 0, 0, 0, 0, 0, 32, 2, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 84, 2, 0, 0, 0, 0, 0, 0, 84, 2, 64, 0, 0, 0, 0, 0, 84, 2, 64, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 229, 116, 100, 4, 0, 0, 0, 184, 63, 1, 0, 0, 0, 0, 0, 184, 63, 65, 0, 0, 0, 0, 0, 184, 63, 65, 0, 0, 0, 0, 0, 100, 9, 0, 0, 0, 0, 0, 0, 100, 9, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 81, 229, 116, 100, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0 };
        static void Main(string[] args)
        {
            if (args.Length == 0)
            {
                Console.WriteLine("Must specify a coredump to inspect.");
                return;
            }

            if (args.Length == 1)
            {
                Console.WriteLine("Must specify a dac to use.");
                return;
            }

            Stopwatch sw = new Stopwatch();
            sw.Start();
            using (DataTarget dt = DataTarget.LoadCoreDump(args[0]))
            {
                ClrRuntime runtime = dt.ClrVersions.Single().CreateRuntime(args[1], true);
                ClrHeap heap = runtime.Heap;

                foreach (ClrObject obj in heap.EnumerateObjects())
                    Console.WriteLine($"{obj.Address:x12} {obj.Type?.Name ?? "error"}");
            }

            Console.WriteLine(sw.Elapsed);
        }
    }
}
